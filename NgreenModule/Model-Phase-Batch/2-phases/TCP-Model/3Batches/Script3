# -----------! pour lancer et obtenir temps d'execution en seconde du script : "time -p ./script" !--------------
#Script utilisant KMS-MAJ et calcule d'indices de performances
#!/bin/bash

BufferSize='250'; #Capacité de la file
model='Ngreen-Module-250-TEST';  #Nom du model créé
seuil='190';
deadline='25'

if test -e $model.Rii
then rm $model.Rii
fi

if test -e $model.Cii
then rm $model.Cii
fi

if test -e $model.cd
then rm $model.cd
fi

if test -e $model.sz
then rm $model.sz
fi

if test -e $model.pi
then rm $model.pi
fi

if test -e $model.tgf
then rm $model.tgf
fi


#Generation de la chaine de markov : Matrice P
gcc generMarkov.c -o genMarkov -lm
./genMarkov -f $model $seuil $deadline

#Creation du ficher tgf
gcc Lam2TGF.c -o tgf
./tgf -f $model 

#Re-ordonner la matrice
#gcc Re-ordre-Matrice.c -o reorder
#./reorder $model $seuil $deadline

#conversion de la matrice reordonner Rii en Cii
gcc convertir.c -o convertir
./convertir $model.Rii Cii


#generation d'Approximation initiale
gcc generApprox.c -o genApp
./genApp -f $model

#generation de partition (2 partitions dans notre cas)
gcc generPartInit.c -o genPart
./genPart -f $model


#Calcule Dist Stat grâce a l'algorithme de KMS Ameliorée 
gcc AlgoKmsMaj.c -o AlgoKmsMaj -lm
time -p ./AlgoKmsMaj -f $model tarjan exp1


#Re-ordonner le vecteur de proba PI
gcc Re-Ordre-Vecteur.c -o reorderV
./reorderV $model $seuil $deadline

#Calcul des recompenses (perte/energies)
#gcc rewardComponentGreen.c -o rewardGreen -lm
#./rewardGreen -f $model-reordre $seuil $deadline


#R CMD BATCH "--args $model" Draw.R







