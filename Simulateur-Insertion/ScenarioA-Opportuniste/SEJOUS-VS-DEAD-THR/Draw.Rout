
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R est un logiciel libre livré sans AUCUNE GARANTIE.
Vous pouvez le redistribuer sous certaines conditions.
Tapez 'license()' ou 'licence()' pour plus de détails.

R est un projet collaboratif avec de nombreux contributeurs.
Tapez 'contributors()' pour plus d'information et
'citation()' pour la façon de le citer dans les publications.

Tapez 'demo()' pour des démonstrations, 'help()' pour l'aide
en ligne ou 'help.start()' pour obtenir l'aide au format HTML.
Tapez 'q()' pour quitter R.

> #Execution : R CMD BATCH "--args $STATIONS $TIMEMAX" Draw.R
> 
> variables = commandArgs(trailingOnly=TRUE)
> STATIONS = as.numeric(variables[1])
> TIMEMAX = as.numeric(variables[2])
> 
> 
> #-------------CourbeLines of Waiting PDUs -----------------
> modelname1 = "NbreMoyen.res"
> data1 = read.table(modelname1)
> attach(data1);
> t =V1
> 
> temp = (data1[TIMEMAX+1,]); #TIMEMAX+1
> temp [1] = -1;
> Max = max(temp);
> 
> #----------------------------------------------------CAMEMBERT POUR LA STATION 1---------------------------------------
> 
> valeurs = table(data1[,2]) #station 1 :  Calculer pourcentages correspondant à chaque valeurs
> total = sum(valeurs)
> pourcentages = valeurs/total*100 ;
> 
> sink('pourcentage.txt') #J'affiche le pourcentage dans un autre fichier
> 	cat(pourcentages,"\n")
> sink()
> 
> data4 = read.table("pourcentage.txt")
> attach(data4)
The following objects are masked from data1:

    V1, V2

> 
> # Fonction à coller dans R - cette fonction text_pie permet d'ajouter des étiquettes au centre des quartiers
> text_pie = function(vector,labels=c(),cex=1) {
+      vector = vector/sum(vector)*2*pi
+      temp = c()
+      j = 0
+      l = 0
+      for (i in 1:length(vector)) {
+           k = vector[i]/2         
+           j =  j+l+k
+           l = k
+           text(cos(j)/2,sin(j)/2,labels[i],cex=cex)
+      }
+      vector = temp
+ }
> 
>         if(length(data4[1,]) == 8){
+ 		pie(table(data1[,2]),col=c("pink","green","yellow","blue","red","brown","cyan","white"),labels=c("0 PDU","1 PDU","2 PDUs","3 PDUs","4 PDU","5 PDU","6 PDUs","7 PDUs"),cex=1.5) 
+ 		text_pie(data4[1,],c(paste0(round(data4[1,][1], 2),"%"),paste0(round(data4[1,][2], 2),"%"),paste0(round(data4[1,][3], 2),"%"),paste0(round(data4[1,][4], 2),"%"),paste0(round(data4[1,][5], 2),"%"),paste0(round(data4[1,][6], 2),"%"),paste0(round(data4[1,][7], 2),"%"),paste0(round(data4[1,][8], 2),"%")),cex=1.5) 
+ 		}
> 		if(length(data4[1,]) == 7){
+ 		pie(table(data1[,2]),col=c("pink","green","yellow","blue","red","brown","cyan"),labels=c("0 PDU","1 PDU","2 PDUs","3 PDUs","4 PDU","5 PDU","6 PDUs"),cex=1.5) 
+ 		text_pie(data4[1,],c(paste0(round(data4[1,][1], 2),"%"),paste0(round(data4[1,][2], 2),"%"),paste0(round(data4[1,][3], 2),"%"),paste0(round(data4[1,][4], 2),"%"),paste0(round(data4[1,][5], 2),"%"),paste0(round(data4[1,][6], 2),"%"),paste0(round(data4[1,][7], 2),"%")),cex=1.5) 
+ 		}
> 		if(length(data4[1,]) == 6){
+ 		pie(table(data1[,2]),col=c("pink","green","yellow","blue","red","brown"),labels=c("0 PDU","1 PDU","2 PDUs","3 PDUs","4 PDUs","5 PDUs"),cex=1.5) 
+ 		text_pie(data4[1,],c(paste0(round(data4[1,][1], 2),"%"),paste0(round(data4[1,][2], 2),"%"),paste0(round(data4[1,][3], 2),"%"),paste0(round(data4[1,][4], 2),"%"),paste0(round(data4[1,][5], 2),"%"),paste0(round(data4[1,][6], 2),"%")),cex=1.5) 
+ 		}
> 		if(length(data4[1,]) == 5){
+ 		pie(table(data1[,2]),col=c("pink","green","yellow","blue","red"),labels=c("0 PDU","1 PDU","2 PDUs","3 PDUs","4 PDUs"),cex=1.5) 
+ 		text_pie(data4[1,],c(paste0(round(data4[1,][1], 2),"%"),paste0(round(data4[1,][2], 2),"%"),paste0(round(data4[1,][3], 2),"%"),paste0(round(data4[1,][4], 2),"%"),paste0(round(data4[1,][5], 2),"%")),cex=1.5) 
+ 		}
> 		if(length(data4[1,]) == 4){
+ 		pie(table(data1[,2]),col=c("pink","green","yellow","blue"),labels=c("0 PDU","1 PDU","2 PDUs","3 PDUs"),cex=1.5) 
+ 		text_pie(data4[1,],c(paste0(round(data4[1,][1], 2),"%"),paste0(round(data4[1,][2], 2),"%"),paste0(round(data4[1,][3], 2),"%"),paste0(round(data4[1,][4], 2),"%")),cex=1.5) 
+ 		}
> 		if(length(data4[1,]) == 3){
+ 		pie(table(data1[,2]),col=c("pink","green","yellow"),labels=c("0 PDU","1 PDU","2 PDUs"),cex=1.5) 
+ 		text_pie(data4[1,],c(paste0(round(data4[1,][1], 2),"%"),paste0(round(data4[1,][2], 2),"%"),paste0(round(data4[1,][3], 2),"%")),cex=1.5) 
+ 		}
> 		if(length(data4[1,]) == 2){
+ 		pie(table(data1[,2]),col=c("pink","green"),labels=c("0 PDU","1 PDU"),cex=1.5) 
+ 		text_pie(data4[1,],c(paste0(round(data4[1,][1], 2),"%"),paste0(round(data4[1,][2], 2),"%")),cex=1.5) 
+ 		}
> 		if(length(data4[1,]) == 1){
+ 		pie(table(data1[,2]),col=c("pink"),labels=c("0 PDU"),cex=1.5) 
+ 		text_pie(data4[1,],c(paste0(round(data4[1,][1], 2),"%")),cex=1.5) 
+ 		}
> 
> 
> #----------------------------------------------------FIN CAMEMBERT STATION 1----------------------------------------------------
> 
> ma_seq=seq(2,STATIONS+1,by=1) # de 2 à STATIONS+1
Error in seq.default(2, STATIONS + 1, by = 1) : 
  'to' ne peut être NA, NaN ou infini
Calls: seq -> seq.default
Exécution arrêtée
